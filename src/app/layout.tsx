'use client';

import { config } from '@fortawesome/fontawesome-svg-core';
import '@fortawesome/fontawesome-svg-core/styles.css';
import { ErrorBoundary } from '@lib/common';
import { MenuControl } from '@lib/controls';
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import { Suspense } from 'react';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { Providers } from '../redux/provider';
import { menuData } from './config';
import './globals.css';
import Init from './init';
config.autoAddCss = false;

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
    return (
        <html lang="en">
            <head>
                <link rel="icon" type="image/svg+xml" href="/artstation.svg" />
            </head>
            <body className={inter.className}>
                <Providers>
                    <ErrorBoundary>
                        <Suspense fallback={<div>Loading...</div>}>
                            <header>
                                <div className="sticky top-0 z-50 w-full py-3 bg-gray-900 text-white">
                                    <MenuControl menus={menuData} />
                                </div>
                            </header>

                            <main>
                                <Init>{children}</Init>
                            </main>

                            <ToastContainer
                                position="bottom-center"
                                autoClose={1000}
                                hideProgressBar={false}
                                newestOnTop={false}
                                closeOnClick
                                rtl={false}
                                pauseOnFocusLoss
                                draggable
                                pauseOnHover
                                theme="light"
                            />

                            <footer></footer>
                        </Suspense>
                    </ErrorBoundary>
                </Providers>
            </body>
        </html>
    );
}
